generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model people {
  id          Int               @id @default(autoincrement())
  name        String?           @db.VarChar(100)
  birth_year  String?           @db.VarChar(10)
  eye_color   String?           @db.VarChar(30)
  gender      String?           @db.VarChar(10)
  hair_color  String?           @db.VarChar(30)
  height      String?           @db.VarChar(10)
  mass        String?           @db.VarChar(10)
  skin_color  String?           @db.VarChar(30)
  homeworld   String?          
  films       String[]
  species     String[]
  vehicles    String[]
  starships   String[]
  url         String?           @db.VarChar(255)
  created     DateTime?
  edited      DateTime?
  page        Int
  cache_date  DateTime          @default(now())
  @@index([url])
}


model films {
  id            Int            @id @default(autoincrement())
  title         String?        @db.VarChar(100)
  episode_id    Int?
  opening_crawl String?        @db.Text
  director      String?        @db.VarChar(100)
  producer      String?        @db.VarChar(100)
  release_date  DateTime?
  species       String[]
  starships     String[]
  vehicles      String[]
  characters    String[]
  planets       String[]
  url           String?         @db.VarChar(255)
  created       DateTime?
  edited        DateTime?
  page        Int
  cache_date    DateTime       @default(now())
  @@index([url])
}

model starships {
  id                     Int              @id @default(autoincrement())
  name                   String?          @db.VarChar(100)
  model                  String?          @db.VarChar(100)
  starship_class         String?          @db.VarChar(100)
  manufacturer           String?          @db.VarChar(100)
  cost_in_credits        String?          @db.VarChar(20)
  length                 String?          @db.VarChar(20)
  crew                   String?          @db.VarChar(20)
  passengers             String?          @db.VarChar(20)
  max_atmosphering_speed String?          @db.VarChar(20)
  hyperdrive_rating      String?          @db.VarChar(20)
  MGLT                   String?          @db.VarChar(20)
  cargo_capacity         String?          @db.VarChar(20)
  consumables            String?          @db.VarChar(100)
  films                  String[]
  pilots                 String[]
  page        Int
  cache_date             DateTime         @default(now())
  @@index([name])
}

model vehicles {
  id                     Int             @id @default(autoincrement())
  name                   String?          @db.VarChar(100)
  model                  String?         @db.VarChar(100)
  vehicle_class          String?         @db.VarChar(50)
  manufacturer           String?         @db.VarChar(100)
  length                 String?         @db.VarChar(20)
  cost_in_credits        String?         @db.VarChar(20)
  crew                   String?         @db.VarChar(20)
  passengers             String?         @db.VarChar(20)
  max_atmosphering_speed String?         @db.VarChar(20)
  cargo_capacity         String?         @db.VarChar(20)
  consumables            String?         @db.VarChar(100)
  films                  String[]
  pilots                 String[]
  url                    String          @db.VarChar(255)
  created                DateTime?
  edited                 DateTime?
  page        Int
  cache_date             DateTime        @default(now())
  @@index([url])
}

model species {
  id               Int             @id @default(autoincrement())
  name             String?          @db.VarChar(100)
  classification   String?         @db.VarChar(50)
  designation      String?         @db.VarChar(50)
  average_height   String?         @db.VarChar(20)
  average_lifespan String?         @db.VarChar(20)
  eye_colors       String?         @db.VarChar(100)
  hair_colors      String?         @db.VarChar(100)
  skin_colors      String?         @db.VarChar(100)
  language         String?         @db.VarChar(100)
  homeworld        String?
  homeworldId      Int?
  films            String[]
  people           String[]
  url              String          @db.VarChar(255)
  created          DateTime?
  edited           DateTime?
  page        Int
  cache_date       DateTime        @default(now())
  @@index([url])
}

model planets {
  id              Int          @id @default(autoincrement())
  name            String?       @db.VarChar(100)
  diameter        String?      @db.VarChar(20)
  rotation_period String?      @db.VarChar(20)
  orbital_period  String?      @db.VarChar(20)
  gravity         String?      @db.VarChar(50)
  population      String?      @db.VarChar(50)
  climate         String?      @db.VarChar(50)
  terrain         String?      @db.VarChar(100)
  surface_water   String?      @db.VarChar(50)
  residents       String[]
  films           String[]
  url             String       @db.VarChar(255)
  created         DateTime?
  edited          DateTime?
  species         String[]
  page        Int
  cache_date      DateTime     @default(now())
  @@index([url])
}
